@using LibMatrix.Extensions
@using ArcaneLibs.Extensions
@using LibMatrix.EventTypes.Spec.State
@inherits BaseTimelineItem

@if (roomMemberData is not null) {
    @switch (roomMemberData.Membership) {
        case "ban":
            <i>@Event.StateKey was banned</i>
            break;
        case "invite":
            <i>@Event.StateKey was invited</i>
            break;
        case "join" when Event.ReplacesState is not null:
            <i>@Event.StateKey changed their display name to @(roomMemberData.Displayname ?? Event.Sender)</i>
            break;
        case "join":
            <i><InlineUserItem User="@(new ProfileResponseEventContent())" HomeServer="@Homeserver" UserId="@Event.StateKey"></InlineUserItem> joined</i>
            break;
        case "leave":
            <i>@Event.StateKey left</i>
            break;
        case "knock":
            <i>@Event.StateKey knocked</i>
            break;
        default:
            <i>@Event.StateKey has an unknown state:</i>
            <pre>
                @Event.ToJson()
            </pre>
            break;
    }
}
else {
    <details>
        <summary>Unknown membership event for @Event.StateKey</summary>
        <pre>
            @Event.ToJson()
        </pre>
    </details>
}

@code {

    private RoomMemberEventContent? roomMemberData => Event.TypedContent as RoomMemberEventContent;

}
