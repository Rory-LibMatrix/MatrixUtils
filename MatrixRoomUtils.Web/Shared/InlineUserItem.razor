@using MatrixRoomUtils.Core.Responses
@using MatrixRoomUtils.Core.StateEventTypes
@using MatrixRoomUtils.Core.Helpers
@using MatrixRoomUtils.Core.StateEventTypes.Spec
<div style="background-color: #ffffff11; border-radius: 0.5em; height: 1em; display: inline-block; vertical-align: middle;" alt="@UserId">
    <img style="@(ChildContent is not null ? "vertical-align: baseline;" : "vertical-align: top;") width: 1em; height: 1em; border-radius: 50%;" src="@ProfileAvatar"/>
    <span style="position: relative; top: -5px;">@ProfileName</span>

    <div style="display: inline-block;">
        @if (ChildContent is not null) {
            @ChildContent
        }
    </div>

</div>

@code {

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public ProfileResponseEventData User { get; set; }

    [Parameter]
    public string? UserId { get; set; }

    [Parameter]
    public string? ProfileAvatar { get; set; } = null;

    [Parameter]
    public string? ProfileName { get; set; } = null;

    private static SemaphoreSlim _semaphoreSlim = new(128);

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        var hs = await MRUStorage.GetCurrentSession();
    
        await _semaphoreSlim.WaitAsync();

        if (User == null && UserId == null)
            throw new ArgumentNullException(nameof(UserId));
        User ??= await hs.GetProfile(UserId);
 

        ProfileAvatar ??= MediaResolver.ResolveMediaUri(hs.FullHomeServerDomain, User.AvatarUrl);
        ProfileName ??= User.DisplayName;

        _semaphoreSlim.Release();
    }

}