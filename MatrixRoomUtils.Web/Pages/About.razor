@page "/About"
@using System.Net
@using System.Net.Sockets
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@using XtermBlazor

<PageTitle>About</PageTitle>

<h3>Rory&::MatrixUtils - About</h3>
<hr/>
<p>Rory&::MatrixRoomUtils is a "small" collection of tools to do not-so-everyday things.</p>
<p>These range from joining rooms on dead homeservers, to managing your accounts and rooms, and creating rooms based on templates.</p>

<br/><br/>
<p>You can find the source code on <a href="https://git.rory.gay/MatrixRoomUtils.git/">my git server</a>.<br/></p>
<p>You can also join the <a href="https://matrix.to/#/%23mru%3Arory.gay?via=rory.gay&via=matrix.org&via=feline.support">Matrix room</a> for this project.</p>
@if (showBinDownload) {
    <p>This deployment also serves a copy of the compiled, hosting-ready binaries at <a href="MRU-BIN.tar.xz">/MRU-BIN.tar.xz</a>!</p>
}
@if (showSrcDownload) {
    <p>This deployment also serves a copy of the compiled, hosting-ready binaries at <a href="MRU-SRC.tar.xz">/MRU-SRC.tar.xz</a>!</p>
}

<Xterm @ref="_terminal" Options="_options" OnFirstRender="@OnFirstRender"  style="max-width: fit-content; overflow-x: hidden;"/>



@code {
    private bool showBinDownload { get; set; }
    private bool showSrcDownload { get; set; }

    protected override async Task OnInitializedAsync() {
        using var hc = new HttpClient();
        var hr = await hc.SendAsync(new HttpRequestMessage(HttpMethod.Head, NavigationManager.ToAbsoluteUri("/MRU-BIN.tar.xz").AbsoluteUri));
        showBinDownload = hr.StatusCode == HttpStatusCode.OK;
        hr = await hc.SendAsync(new HttpRequestMessage(HttpMethod.Head, NavigationManager.ToAbsoluteUri("/MRU-SRC.tar.xz").AbsoluteUri));
        showSrcDownload = hr.StatusCode == HttpStatusCode.OK;
        await base.OnInitializedAsync();
    }


    private Xterm _terminal;

    private TerminalOptions _options = new TerminalOptions
    {
        CursorBlink = true,
        CursorStyle = CursorStyle.Block,
        Theme =
        {
            Background = "#17615e",
        },
    };

    private async Task OnFirstRender() {
        var message = "Hello, World!\nThis is a terminal emulator!\n\nYou can type stuff here, and it will be sent to the server!\n\nThis is a test of the emergency broadcast system.\n\nThis is only a t";
        _terminal.Options.RendererType = RendererType.Dom;
        _terminal.Options.ScreenReaderMode = true;
        TcpClient.
        for (var i = 0; i < message.Length; i++) {
            await _terminal.Write(message[i].ToString());

            await Task.Delay(50);
            _terminal.Options.Theme.Background = $"#{(i * 2):X6}";
        }
    }
}
