@using MatrixRoomUtils.Core.Responses
@using MatrixRoomUtils.Core.StateEventTypes
@using MatrixRoomUtils.Core.Helpers
@using MatrixRoomUtils.Core.StateEventTypes.Spec
<div style="background-color: #ffffff11; border-radius: 25px; margin: 8px; width: fit-Content;">
    <img style="@(ChildContent is not null ? "vertical-align: baseline;" : "") width: 32px; height:  32px; border-radius: 50%;" src="@profileAvatar"/>
    <span style="vertical-align: middle; margin-right: 8px; border-radius: 75px;">@profileName</span>

    <div style="display: inline-block;">
        @if (ChildContent is not null) {
            @ChildContent
        }
    </div>

</div>

@code {

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public ProfileResponseEventData User { get; set; }

    [Parameter]
    public string UserId { get; set; }

    private string? profileAvatar { get; set; } = "/icon-192.png";
    private string? profileName { get; set; } = "Loading...";

    private static SemaphoreSlim _semaphoreSlim = new(8);

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();

        var hs = await MRUStorage.GetCurrentSessionOrNavigate();
        if (hs is null) return;
        
        await _semaphoreSlim.WaitAsync();

        if (User == null) {
            if (UserId == null) {
                throw new ArgumentNullException(nameof(UserId));
            }
            User = await hs.GetProfile(UserId);
        }

    // UserId = User.;
        profileAvatar = MediaResolver.ResolveMediaUri(hs.FullHomeServerDomain, User.AvatarUrl);
        profileName = User.DisplayName;

        _semaphoreSlim.Release();
    }

}