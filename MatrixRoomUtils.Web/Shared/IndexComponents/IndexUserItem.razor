@using MatrixRoomUtils.Authentication
@using MatrixRoomUtils.Web.Classes
@using System.Text.Json
@using Blazored.LocalStorage
@using MatrixRoomUtils.Extensions
@using Index = MatrixRoomUtils.Web.Pages.Index
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<div style="margin-bottom: 1em;">
    <img style="border-radius: 50%; height: 3em; width: 3em;" src="@_avatarUrl"/>
    <span style="margin-left: 1em;"><input type="radio" name="csa" checked="@(LocalStorageWrapper.AccessToken == Token)" onclick="@SetCurrent" style="text-decoration-line: unset;"/> <b>@User.Profile.DisplayName</b> on <b>@User.LoginResponse.HomeServer</b></span>
    <a href="#" onclick="@RemoveUser">Remove</a>
</div>

@code {
    [Parameter]
    public string Token { get; set; }
    [Parameter]
    public UserInfo User { get; set; }
    
    private string _avatarUrl { get; set; }
    private bool _removed { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        if(User.Profile.AvatarUrl != null && User.Profile.AvatarUrl != "")
            _avatarUrl = await User.Profile.AvatarUrl.GetMediaUrl();
        else _avatarUrl = "https://api.dicebear.com/6.x/identicon/svg?seed=" + User.LoginResponse.UserId;
        await base.OnInitializedAsync();
    }

    private async Task RemoveUser()
    {
        LocalStorageWrapper.LoginSessions.Remove(Token);
        await LocalStorageWrapper.SaveToLocalStorage(LocalStorage);
        _removed = true;
        
        StateHasChanged();
    }
    private async Task SetCurrent()
    {
        LocalStorageWrapper.AccessToken = Token;
        LocalStorageWrapper.CurrentHomeserver = await MatrixAuth.ResolveHomeserverFromWellKnown(LocalStorageWrapper.LoginSessions[Token].LoginResponse.HomeServer);
        await LocalStorageWrapper.SaveToLocalStorage(LocalStorage);
        await LocalStorageWrapper.LoadFromLocalStorage(LocalStorage);
        
        StateHasChanged();
    }
}